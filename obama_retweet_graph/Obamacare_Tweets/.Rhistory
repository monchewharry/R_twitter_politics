as.Date(1, origin = "2012-03-17 05:44:56 GMT")
time_stamp<-sapply(obamacare[1],FUN = function(x) as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "GMT"))
time_stamp
x1 <- as.POSIXct(obamacare[[1]]$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "GMT")#?strftime
x2 <- as.POSIXct(obamacare[[2]]$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "GMT")#?strftime
x1
x2
c(x1,x2)
time_stamp<-sapply(obamacare[1],FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "GMT")))
time_stamp
as.Date(1331963096, origin = "1900-01-01")
x1- 1331963096
time_stamp<-sapply(obamacare[1:2],FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "GMT")))
time_stamp
as.Date(1331963185, origin = "1970-01-01 GMT")
x1- 1331963096
x2-1331963185
class(x1- 1331963096)
time_stamp<-sapply(obamacare,FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "GMT")))#origin "1970-01-01 GMT"
x1 <- strptime(obamacare[[1]]$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "GMT")#?strftime
x1
x1 <- strptime(obamacare[[1]]$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "UTC")#?strftime
x1
(x
(x
(x
(x
A<-sapply(obamacare[1:2],FUN = function(x) return(strptime(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "GMT")))#origin "1970-01-01 GMT"
a
A
A<-sapply(obamacare[1:2],FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "UTC")))#origin "1970-01-01 GMT"
a
A
)
head(time_stamp)
time_stamp[1]
head(time_stamp)+(x1-time_stamp[1])
c(obamacare[[1]]$created_at,obamacare[[2]]$created_at)
time_stamp<-time_stamp+(x1-time_stamp[1])
tail(time_stamp)
c(obamacare[[length(obamacare)]]$created_at,obamacare[[length(obamacare)-1]]$created_at)
time_stamp<-time_stamp+(x1-time_stamp[1])#
order(c(1,3,2))
order(time_stamp)
?weekdays
time_stamp[1]
weekdays(time_stamp[1])
class(time_stamp[1])
structure(time_stamp, class = c("POSIXct",                                                                           "POSIXt"))
structure(time_stamp, class = c("POSIXct",                                                                           "POSIXt"))[1]
structure(time_stamp, class = c("POSIXct",                                                                           "POSIXt"))[2]
structure(time_stamp, class = c("POSIXct",                                                                           "POSIXt"))[length(obamacare)]
time_stamp[length(obamacare)]
time_stamp<-sapply(obamacare[1:2],FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "UTC")))
time_stamp<-structure(time_stamp, class = c("POSIXct","POSIXt"))
time_stamp
time_stamp<-sapply(obamacare[1:2],FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "UTC")))
time_stamp<-structure(time_stamp, class = c("POSIXct","POSIXt"))
time_stamp
time_stamp<-sapply(obamacare[1:2],FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "GMT")))
time_stamp<-structure(time_stamp, class = c("POSIXct","POSIXt"))
time_stamp
time_stamp<-sapply(obamacare,FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "UTC")))#origin "1970-01-01 GMT"
time_stamp<-time_stamp+(x1-time_stamp[1])#
time_stamp[1]
time_stamp[100]
time_stamp[1000]
strftime(time_stamp[1], format="%H:%M:%S")
time_stamp[1]
strftime(time_stamp[1], format="%y-%b-%d")
strftime(time_stamp[1], format="%Y-%B-%D")
strftime(time_stamp[1], format="%D")
strftime(time_stamp, format="%D")
strftime(time_stamp[1], format="%D")
strftime(time_stamp[1], format="%D")[length(obamacare)]
strftime(time_stamp, format="%D")[length(obamacare)]
time_stamp<-strftime(time_stamp, format="%D")#day/month/year
head(time_stamp)
lengh(time_stamp)
length(time_stamp)
length(obamacare)
str(obamacare[[1]])
obamacare[[1]]$entities$hashtags
obamacare[[100]]$entities$hashtags
obamacare[[100]]$text
duplicated(time_stamp)
i=0
while(T){
i=i+1
if(duplicated(time_stamp)=FALSE) print(i)
if(i=length(time_stamp)) break
}
count<-c()
count
count<-c()
while(T){
i=i+1
if(duplicated(time_stamp)=FALSE) count<-c(count,i)
if(i==length(time_stamp)) break
}
count<-c()
while(T){
i=i+1
if(duplicated(time_stamp)==FALSE) count<-c(count,i)
if(i==length(time_stamp)) break
}
which(duplicated(time_stamp)==FALSE)
count<-which(duplicated(time_stamp)==FALSE)
count<-count-1
count<-which(duplicated(time_stamp)==FALSE)
count<-count[-1]-1
count
length(count)
table(time_stamp)
hist(time_stamp)
hist(table(time_stamp))
data.frame(table(time_stamp))
cumsum(table(time_stamp))
time_stamp[76164]
time_stamp[76165]
time_stamp[8105]
time_stamp[81025]
time_stamp[81026]
obamacare[[81025]]$created_at
obamacare[[81026]]$created_at
data.frame(table(time_stamp))
volume<-data.frame(table(time_stamp))
volume
library(xts)
as.xts(volume,index=volume$time_stamp)
?as.xts
as.xts(volume,volume$time_stamp)
as.xts(volume,time_stamp)
class(volume$time_stamp)
volume<-data.frame(table(time_stamp),stringsAsFactors = F)
as.xts(volume,time_stamp)
class(volume$time_stamp)
volume<-data.frame(table(time_stamp),stringsAsFactors = F)
class(volume$time_stamp)
class(volume$time_stamp)<-"character"
volume$time_stamp<-as.Date(volume$time_stamp)
as.Date("10/25/12",format = "%d/%m/%y")
as.Date("10/25/12",format = "%d/%b/%y")
as.Date("10/25/12",format = "%b/%d/%y")
as.Date("10/25/12",format = "%B/%D/%y")
?strftime
as.Date("10/25/12",format = "%B/%d/%y")
as.Date("10/25/12",format = "%D")
as.Date("10/25/12",format = "%m/%D/%y")
as.Date("10/25/12",format = "%m/%d/%y")
volume$time_stamp<-as.Date(volume$time_stamp,format = "%m/%d/%y")
library(xts)
as.xts(volume,volume$time_stamp)
as.xts(volume$Freq,volume$time_stamp)
volume
time_stamp<-sapply(obamacare,FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "UTC")))#origin "1970-01-01 GMT"
time_stamp<-time_stamp+(x1-time_stamp[1])#
time_stamp<-strftime(time_stamp, format="%D")#day/month/year
volume<-data.frame(table(time_stamp))
class(volume$time_stamp)<-"character"
count<-as.xts(volume$Freq,as.Date(volume$time_stamp,format = "%m/%d/%y"))
count
class(volume)
as.Date(volume$time_stamp,format = "%m/%d/%y")
class(volume$time_stamp)
volume$time_stamp
as.Date(volume$time_stamp[1],format = "%m/%d/%y")
volume$time_stamp[1]
volume
time_stamp<-sapply(obamacare,FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "UTC")))#origin "1970-01-01 GMT"
time_stamp<-time_stamp+(x1-time_stamp[1])#
time_stamp<-strftime(time_stamp, format="%D")#day/month/year
volume<-data.frame(table(time_stamp))
class(volume$time_stamp)<-"character"
volume$time_stamp
volume
time_stamp<-sapply(obamacare,FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "UTC")))#origin "1970-01-01 GMT"
time_stamp<-time_stamp+(x1-time_stamp[1])#
time_stamp<-strftime(time_stamp, format="%D")#day/month/year
time_stamp
time_index<-time_stamp
volume<-data.frame(table(time_index))
volume
class(volume$time_stamp)<-"character"
class(volume$time_index)<-"character"
volume
time_index<-time_stamp#copy
volume<-data.frame(table(time_index))
volume
plot(volume)
plot(volume,lty="l")
plot(volume,pch="l")
class(volume$time_index)
as.character(volume$time_index)
volume$time_index<-as.character(volume$time_index)
volume
class(volume$time_index)
as.Date(volume$time_index,format = "%m%d%y")
as.Date("11/08/12",format = "%m%d%y")
as.Date("11/08/12",format = "%m%d%Y")
?as.Date
?as.Date
?as.Date
as.Date("11/08/12",format = "%m/%d/%Y")
as.Date("11/08/12",format = "%m/%d/%y")
count<-as.xts(volume$Freq,as.Date(volume$time_index,format = "%m/%d/%y"))
count
plot(count)
?text
max(count)
plot(count,main="tweet volume in 3 period")
plot(count["/2012-04-03"])
library(quantmod)
chartSeries(count["/2012-04-03"],main="tweet volume from")
count1<-count["/2012-04-03"]
chartSeries(count1,main="tweet volume from")
chartSeries(count1,main="tweet volume from")
?chartSeries
chartSeries(count,type="line",
subset="/2012-04-03")
tweet_volume<-as.xts(volume$Freq,as.Date(volume$time_index,format = "%m/%d/%y"))
chartSeries(tweet_volume,type="line",
subset="/2012-04-03")
chartSeries(tweet_volume,type="line")
plot(tweet_volume)
chartSeries(tweet_volume,type="line")
chartSeries(tweet_volume,type="line",
subset="/2012-04-03")
chartSeries(tweet_volume,type="line",
subset="2012-06-19::2012-07-07")
chartSeries(tweet_volume,type="line",
subset="2012-10-22::2012-11-08")
par(mfrow = c(3,2,1,2))
?layout
nf <- layout(matrix(c(2,0,1,3),2,2,byrow = TRUE), c(3,1), c(1,3), TRUE)
layout.show(nf)
nf <- layout(matrix(c(2,2,1,3),2,2,byrow = TRUE), c(3,1), c(1,3), TRUE)
layout.show(nf)
nf <- layout(matrix(c(1,1,1,2,3,4),2,3,byrow = TRUE), c(3,1), c(1,3), TRUE)
layout.show(nf)
?layout
nf <- layout(matrix(c(1,1,1,2,3,4),2,3,byrow = TRUE), c(3,1,1), c(1,3), TRUE)
layout.show(nf)
nf <- layout(matrix(c(1,1,1,2,3,4),2,3,byrow = TRUE), c(1,1,1), c(1,3), TRUE)
layout.show(nf)
nf <- layout(matrix(c(1,1,1,2,3,4),2,3,byrow = TRUE), c(1,1,1), c(3,1), TRUE)
layout.show(nf)
nf <- layout(matrix(c(1,1,1,2,3,4),2,3,byrow = TRUE), c(1,1,1), c(2,1), TRUE)
layout.show(nf)
nf <- layout(matrix(c(1,1,1,2,3,4),2,3,byrow = TRUE), c(1,1,1), c(1.5,1), TRUE)
layout.show(nf)
nf <- layout(matrix(c(1,1,1,2,3,4),2,3,byrow = TRUE), c(1,1,1), c(2,1), TRUE)
layout.show(nf)
plot(tweet_volume,main="tweet volume over 3 periods")
chartSeries(tweet_volume,type="line")
chartSeries(tweet_volume,type="line",
subset="/2012-04-03")
chartSeries(tweet_volume,type="line",
subset="2012-06-19::2012-07-07")
chartSeries(tweet_volume,type="line",
subset="2012-10-22::2012-11-08")
nf <- layout(matrix(c(1,1,1,2,3,4),2,3,byrow = TRUE), c(1,1,1), c(2,1), TRUE)
layout.show(nf)
plot(tweet_volume,main="tweet volume over 3 periods")
plot(tweet_volume["/2012-04-03"])
plot(tweet_volume["plot(tweet_volume["/2012-04-03"])"])
plot(tweet_volume["2012-06-19::2012-07-07"])
2012-10-22::2012-11-08
plot(tweet_volume["2012-06-19::2012-07-07"])
plot(tweet_volume["2012-10-22::2012-11-08"])
dev.off()
plot(tweet_volume,main="tweet volume over 3 periods")
plot(tweet_volume["/2012-04-03"])
plot(tweet_volume["2012-06-19::2012-07-07"])
nf <- layout(matrix(c(1,1,1,2,3,4),2,3,byrow = TRUE), c(1,1,1), c(2,1), TRUE)
layout.show(nf)
plot(tweet_volume,main="tweet volume over 3 periods")
plot(tweet_volume["/2012-04-03"])
plot(tweet_volume["2012-06-19::2012-07-07"])
plot(tweet_volume["2012-10-22::2012-11-08"])
plot(tweet_volume["2012-06-19::2012-07-07"],main="2nd period")
plot(tweet_volume["/2012-04-03"],main="1st period")
plot(tweet_volume["2012-06-19::2012-07-07"],main="2nd period")
plot(tweet_volume["2012-10-22::2012-11-08"],main="3rd peirod")
chartSeries(tweet_volume,type="line")
chartSeries(tweet_volume,type="line",
subset="/2012-04-03")
chartSeries(tweet_volume,type="line",
subset="2012-06-19::2012-07-07")
chartSeries(tweet_volume,type="line",
subset="2012-10-22::2012-11-08")
?png
nf <- layout(matrix(c(1,1,1,2,3,4),2,3,byrow = TRUE), c(1,1,1), c(2,1), TRUE)
layout.show(nf)
png("tweet volume.png")
plot(tweet_volume,main="tweet volume over 3 periods")
plot(tweet_volume["/2012-04-03"],main="1st period")
plot(tweet_volume["2012-06-19::2012-07-07"],main="2nd period")
plot(tweet_volume["2012-10-22::2012-11-08"],main="3rd peirod")
dev.off()
png("tweet volume.png")
nf <- layout(matrix(c(1,1,1,2,3,4),2,3,byrow = TRUE), c(1,1,1), c(2,1), TRUE)
plot(tweet_volume,main="tweet volume over 3 periods")
plot(tweet_volume["/2012-04-03"],main="1st period")
plot(tweet_volume["2012-06-19::2012-07-07"],main="2nd period")
plot(tweet_volume["2012-10-22::2012-11-08"],main="3rd peirod")
dev.off()
png("tweet volume2.png")
chartSeries(tweet_volume,type="line")
png("volume ~2012-04-03.png")
chartSeries(tweet_volume,type="line",
subset="/2012-04-03")
png("volume 2012-06-19~2012-07-07.png")
chartSeries(tweet_volume,type="line",
subset="2012-06-19::2012-07-07")
png("volume 2012-10-22~2012-11-08.png")
chartSeries(tweet_volume,type="line",
subset="2012-10-22::2012-11-08")
dev.off()
png("tweet volume2.png")
chartSeries(tweet_volume,type="line")
dev.off()
png("volume ~2012-04-03.png")
chartSeries(tweet_volume,type="line",
subset="/2012-04-03")
dev.off()
png("volume 2012-06-19~2012-07-07.png")
chartSeries(tweet_volume,type="line",
subset="2012-06-19::2012-07-07")
dev.off()
png("volume 2012-10-22~2012-11-08.png")
chartSeries(tweet_volume,type="line",
subset="2012-10-22::2012-11-08")
dev.off()
load("/Users/CDX/Google\ Drive/twitter_politics_data/obamacare.RData")# The data list is saved
x1 <- strptime(obamacare[[1]]$created_at
,format="%a %b %d %H:%M:%S %z %Y",tz = "UTC")#see ?strftime for %
time_stamp<-sapply(obamacare,FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
time_stamp<-time_stamp+(x1-time_stamp[1])#
tz = "UTC")))#origin "1970-01-01 GMT"
time_stamp<-sapply(obamacare,FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "UTC")))#origin "1970-01-01 GMT"
time_stamp<-time_stamp+(x1-time_stamp[1])##origin "1970-01-01 GMT"
time_stamp<-strftime(time_stamp, format="%D")#day/month/year
time_index<-time_stamp#copy
time_index
cut(time_index)
cut_point<-which(!duplicated(time_index))
cut_point
cut_point<-which(!duplicated(time_index))[-1]
cut_point<-which(!duplicated(time_index))[-1]-1
cut_point
time_index(cut_point)
time_index[cut_point]
obamacare[[1]]$entities$hashtags
obamacare[[2]]$entities$hashtags
unlist(obamacare[[1]]$entities$hashtags)
class(obamacare[[1]]$entities$hashtags)
hash_tags<-list()
length(cut_point)
length(levels(time_index))
levels(time_index)
time_index
length(table(time_index))
levels(time_index)
length(cut_point)
time_index(cut_point)
time_index[cut_point]
head(time_index)
tail(time_index)
cut_point<-c(cut_point,length(time_index))
time_index[cut_point]
obamacare[[2]]$entities$hashtags
get_hash<-function(x){
lapply(x$entities$hashtags,function(y) return(y$text))
}
lapply(obamacare[1:5], FUN = get_hash)
get_hash<-function(x){
sapply(x$entities$hashtags,function(y) return(y$text))
}
lapply(obamacare[1:5], FUN = get_hash)
lapply(obamacare[1:5], FUN = get_hash)[[4]]
lapply(obamacare[1:5], FUN = get_hash)[[4]][2]
cut_point<-which(!duplicated(time_index))[-1]-1
cut_point<-c(1,cut_point,length(time_index))#the point where the date changes
cut_point
cut_point<-which(!duplicated(time_index))[-1]-1
cut_point<-c(0,cut_point,length(time_index))#the point where the date changes
hash_tags<-list()
get_hash<-function(x){
sapply(x$entities$hashtags,function(y) return(y$text))
}
?lapply
length(cut_point)-1
length(table(time_index))
hash_tags<-list()
for(i in seq(length(cut_point)-1)){#collect hashtags for each tweet on each day
hash_period<-lapply(obamacare[cut_point[i]+1:cut_point[i+1]]
,FUN = get_hash)
hash_tags[[i]]<-hash_period
}
hash_tags
save(hash_tags,file = "hash_tags.RData")
length(hash_tags)
unlist(hash_tags[[13]])
table(unlist(hash_tags[[13]]))
order(table(unlist(hash_tags[[13]])))
order(c(1,2,3))
order(c(1,2,3),decreasing = F)
order(c(1,2,3),decreasing = T)
order(table(unlist(hash_tags[[13]])),decreasing = T)[1:5]
unlist(hash_tags[[13]])[order(table(unlist(hash_tags[[13]])),decreasing = T)[1:5]]
top5<-function(x){
unlist(x)[order(table(unlist(x),decreasing = T)[1:5]]
top5<-function(x){
unlist(x)[order(table(unlist(x),decreasing = T))[1:5]]
}
sapply(hash_tags,FUN = top5)
table(unlist(x)
)
unlist(x)[order(table(unlist(x),decreasing = T))[1:5]]
table(unlist(x))
order(table(unlist(hash_tags[[13]])),decreasing = T)[1:5]
table(unlist(hash_tags[[13]]))
which.max(table(unlist(hash_tags[[13]])))
order(table(unlist(hash_tags[[13]])),decreasing = T)[1:5]
top5<-function(x){
sorted<-unlist(x)[order(table(unlist(x)),decreasing = T)]
if(length(sorted>5)) return sorted[1:5]
else return(sorted[1])
}
top5<-function(x){
sorted<-unlist(x)[order(table(unlist(x)),decreasing = T)]
if(length(sorted>5)) return sorted[1:5]
top5<-function(x){
sorted<-unlist(x)[order(table(unlist(x)),decreasing = T)]
if(length(sorted>5)) return(sorted[1:5])
else return(sorted[1])
}
sapply(hash_tags,FUN = top5)
tophash<-t(sapply(hash_tags,FUN = top5))
head(tophash)
colnames(tophash)<-c("top5_1","top5_2","top5_3","top5_4","top5_5")
tophash<-as.data.frame(tophash)
head(tophash)
tophash<-t(sapply(hash_tags,FUN = top5))
colnames(tophash)<-c("top5_1","top5_2","top5_3","top5_4","top5_5")
tophash<-as.data.frame(tophash,stringsAsFactors = F)
head(time_index)
(volume<-data.frame(table(time_index)))
volume$time_index<-as.character(volume$time_index)
library(quantmod)
tweet_volume<-as.xts(volume$Freq,as.Date(volume$time_index,format = "%m/%d/%y"))
head(tweet_volume)
class(tweet_volume)
cbind(tweet_volume,tophash)
length(tweet_volume)
tweet_volume
unclass(tweet_volume)
as.xts(tophash,as.Date(volume$time_index,format = "%m/%d/%y"))
cbind(tweet_volume,as.xts(tophash,as.Date(volume$time_index,format = "%m/%d/%y")))
merge(tweet_volume,as.xts(tophash,as.Date(volume$time_index,format = "%m/%d/%y")))
volume
class(volume)
as.list(volume)
cbind(volume,tophash)
cbind(volume,tophash)
A<-cbind(volume,tophash)
View(A)
?write.csv
write.csv(A,file="ts_list.csv")
library(dplyr)
?rename
rename(A,volume=Freq)
A<-rename(A,volume=Freq)
write.csv(A,file="ts_list.csv")
