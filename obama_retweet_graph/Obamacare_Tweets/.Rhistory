lines(yPred$lwr~x,col='black',lty=2)
lines(yPred$upr~x,col='black',lty=2)
lines(yPred$fit~x,col='black',lty=1)
help(rep)
set.seed(1)
x<-factor(rep(c(0,1),each=30))
y<-c(rnorm(30,0,1),rnorm(30,1,1))
plot(y~x)
model<-lm(y~x)
summary(model)
model.matrix(model)
A=c(1,2,3)
class(A)
mode(A)
length(A)
length(A)+1
class(length(A))
A=1:12
matrix(A,nrow=3,ncol=4)
c=matrix(A,nrow=3,ncol=4)
c
class(c)
help(matrix)
a=c(1:12)
b=seq(2,24,12)
A=matrix(a,nrow=3,ncol=4)
B=matrix(b,nrow=4,ncol=3)
C=matrix(b,nrow=3,ncol=3)
C=matrix(b,nrow=3,ncol=4)
A
B
C
a=c(1:12)
b=seq(2,24,length=12)
A=matrix(a,nrow=3,ncol=4)
B=matrix(b,nrow=4,ncol=3)
C=matrix(b,nrow=3,ncol=4)
A
B
C
A*B
A*C
A%*%C
A%*%B
help(diag)
diag(A)
A
curwd
dir(curwd)
output<-file('output.txt')
cat(1:100,sep='\t',file=output)
close(output)
install.packages("latex2exp")
library(demography)
install.packages("demography")
install.packages("tikzDevice")
library(demography)
library(latex2exp)
fit <- lca(fr.mort)
par(mfrow=c(2,2), mar=c(4,5,2,1), family="serif")
plot(fit$age, fit$ax, type="l", ylab=latex2exp("a_x"), xlab="Age: x")
plot(fit$age, fit$bx, type="l", ylab=latex2exp("b_x"), xlab="Age: x")
plot(0, type="n", axes=FALSE, xlab="", ylab="")
text(1, 0, latex2exp("m_{x,t} = a_x + k_tb_x + e_{x,t}"))
plot(fit$kt, ylab=latex2exp("k_t"), xlab="Year: t")
library(tikzDevice)
fit <- lca(fr.mort)
tikz("tikz-test.tex",width=15/2.54,height=12/2.54)
par(mfrow=c(2,2),mar=c(4,5,2,1),family="serif")
plot(fit[["age"]],fit$ax,type="l",
ylab="$a_x$", xlab="Age: $x$")
plot(fit[["age"]],fit$bx,type="l",
ylab="$b_x$", xlab="Age: $x$")
plot(0,type="n",axes=FALSE,xlab="",ylab="")
text(1,0,"$m_{x,t} = a_x + k_tb_x + e_{x,t}$")
plot(fit$kt,ylab="$k_t$", xlab="Year: $t$")
dev.off()
library("tikzDevice", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:tikzDevice", unload=TRUE)
install.packages("wesananderson")
install.packages("wesanderson")
help(wesanderson)
??wesanderson
wes_palette("Royal1")
library(wesanderson)
wes_palette("Royal1")
wes_palette("GrandBudapest")
a<-wes_palette("GrandBudapest")
a
library(RJSONIO)
obamacare<-fromJSON("/Users/CDX/Downloads/obamacare\ 100000.JSON")
obamacare
class(obamacare)
obamacare$user
obamacare
str(obamacare)
obama<- fromJSON("/Users/CDX/Downloads/obamacare\ sample\ json.json")
?system.file
f = system.file("sampleData", "embedded.json", package = "RJSONIO")
f
con = file(f, "r")
readLines(con, 1)  # eat the first line
fromJSON(con, maxNumLines = 4)
close(con)
obamacare
library(igraph)
library(stringr)
library(dplyr)
load("/Users/CDX/Google\ Drive/twitter_politics_data/obamacare.RData")# The data list is saved
length(obamacare)
##### 1. data structure ####
str(obamacare[[101010]])
obamacare[[101010]]$text
obamacare[[101010]]$user$screen_name# @screen_name unique
obamacare[[101010]]$user$id
obamacare[[101010]]$user$name# may be duplicated
obamacare[[101010]]$retweeted_status$user$screen_name# retweet from
obamacare[[101010]]$retweeted_status$user$name
obamacare[[101010]]$retweeted_status$user$id
# i=0
# while(T){
#   i=i+1
#   if(identical(obamacare[[i]]$user$screen_name,"mattklewis")
#      &identical(obamacare[[i]]$text,"If ObamaCare is overturned, George W. Bush's greatest legacy might be ... Roberts and Alito. http://t.co/y0WxraPM")){
#     print(i)
#   }else{if(i=length(obamacare)) break}
# }
str(obamacare[[100904]])
str(obamacare[[105505]])
obamacare[[100904]]$retweeted_status#original (=NULL)
#### make edge list ####
edge<-function(x){
if(identical(NULL,x$retweeted_status)) return(c(NA,NA))
else{
return(c(x$user$id,x$retweeted_status$user$id))
}
}
edge_list<-t(sapply(obamacare,FUN = edge))
colnames(edge_list)<-c("post","retweet_from")
edge_list<-edge_list[!is.na(edge_list[,1]),]
edge_list<-as.data.frame(edge_list,stringsAsFactors = F)
weight<-table(edge_list$retweet_from)
weight<-as.data.frame(weight,stringsAsFactors = F);names(weight)<-c("id","weight")
head(weight)
#### make vertices list ####
vertices_list<-t(sapply(obamacare,FUN = function(x) c(x$user$id_str,x$user$name)))
vertices2<-function(x){
if(!identical(NULL,x$retweeted_status)) return(c(x$retweeted_status$user$id_str,x$retweeted_status$user$name))
else return(c(NA,NA))
}
vertices_list2<-t(sapply(obamacare,FUN = vertices2))
vertices_list2<-vertices_list2[!is.na(vertices_list2[,1]),]
vertices_list<-rbind(vertices_list,vertices_list2)
colnames(vertices_list)<-c("id","name")
vertices_list<-as.data.frame(vertices_list,stringsAsFactors = F)
library(dplyr)
vertices_list<-distinct(select(vertices_list,id,name))
vertices_list<-vertices_list[!duplicated(vertices_list$id),]#delete the duplicated item
setdiff(union(edge_list$post,edge_list$retweet_from),vertices_list$id)#varify the completeness
#add attr weight
vertices_list<-merge(vertices_list,weight,all.x=T)
vertices_list[is.na(vertices_list$weight),3]<-0
head(vertices_list)
length(vertices_list[,1])
#### network graph ####
library(igraph)
net<-graph.data.frame(d=edge_list,directed=T)# GRAPH OBJECT
length(V(net)$name)
length(V(net)$weight)
fruch = layout.fruchterman.reingold(net)
circle=layout.circle(net)
net
par(mar=c(0,0,0,0))
png(filename = "retweet_graph.png")
par(mar=c(0,0,0,0))
plot(net, edge.arrow.size=.2, edge.color="orange",
vertex.color="orange", vertex.frame.color="#ffffff",
vertex.label=NA, vertex.label.color="black")
# add title
title("\nTweets with 'obamacare':  Who retweets whom",
cex.main=1, col.main="gray95",family="mono")
dev.off()
head(vertices_list)
v<-select(vertices_list,id,weight)
head(v)
net1<-graph.data.frame(d=edge_list,v= v,directed=T)# GRAPH OBJECT
net1
par(mar=c(0,0,0,0))
png(filename = "retweet_graph.png")
par(mar=c(0,0,0,0))
plot(net1, edge.arrow.size=.2, edge.color="orange",
vertex.color="orange",
vertex.size=V(net1)$weight/max(V(net1)$weight)+1
,vertex.frame.color="#ffffff",
vertex.label=NA, vertex.label.color="black")
# add title
title("\nTweets with 'obamacare':  Who retweets whom",
cex.main=1, col.main="gray95",family="mono")
dev.off()
hist(weight)
head(weigth)
head(weight)
head(table(edge_list$retweet_from))
hist(table(edge_list$retweet_from))
load("hash_tags.RData")
getwd()
setwd("/Users/CDX/R_twitter_politics/obama_retweet_graph/Obamacare_Tweets")
load("hash_tags.RData")
x<-hash_tags[[1]]
x
freq<-table(unlist(hash_tags))
top_5<-names(freq)[order(freq,decreasing = T)][1:5] # the top 5 # over the whole period
freq5<-NULL
for(tag in top_5){
freq5<-c(freq5,sum(unlist(x)==tag))
}
return(freq5)
freq5<-NULL
for(tag in top_5){
freq5<-c(freq5,sum(unlist(x)==tag))
}
freq5
sum(unlist(x)==top_5[1])
sum(unlist(x)==top_5[2])
sum(unlist(x)==top_5[3])
dailyfreq<-function(x){
freq5<-NULL
for(tag in top_5){
freq5<-c(freq5,sum(unlist(x)==tag))
}
freq5
}
sapply(hash_tags,FUN = dailyfreq)
top5_freq<-sapply(hash_tags,FUN = dailyfreq)
top5_freq<-t(sapply(hash_tags,FUN = dailyfreq))
colnames(top5_freq)<-top_5
head(top5_freq)
top_5<-names(freq)[order(freq,decreasing = T)][1:6] # the top 5 # over the whole period
top5_freq<-t(sapply(hash_tags,FUN = dailyfreq))
colnames(top5_freq)<-top_5
head(top5_freq)
head(top5_freq)
library(dplyr)
mutate(top5_freq,Obamacare=Obamacare+ObamaCare)
class(top5_freq)
top5_freq<-as.data.frame(top5_freq,stringsAsFactors = F)
head(top5_freq)
mutate(top5_freq,Obamacare=Obamacare+ObamaCare)
select((mutate(top5_freq,Obamacare=Obamacare+ObamaCare)),-ObamaCare)
top5_freq<-select((mutate(top5_freq,Obamacare=Obamacare+ObamaCare)),-ObamaCare)# merge the same hashtags
head(top5_freq)
?volume
load("/Users/CDX/Google\ Drive/twitter_politics_data/obamacare.RData")# The data list is saved
save(volume,file = "volume.RData")
x1 <- strptime(obamacare[[1]]$created_at
,format="%a %b %d %H:%M:%S %z %Y",tz = "UTC")#see ?strftime for %
time_stamp<-sapply(obamacare,FUN = function(x) return(as.POSIXct(x$created_at,
format="%a %b %d %H:%M:%S %z %Y",
tz = "UTC")))
time_stamp<-time_stamp+(x1-time_stamp[1])##origin "1970-01-01 GMT"
time_stamp<-strftime(time_stamp, format="%D")#day/month/year
time_index<-time_stamp#copy
(volume<-data.frame(table(time_index)))
volume$time_index<-as.character(volume$time_index)
save(volume,file = "volume.RData")
(B<-cbind(volume,tophash))#to merge the time series
(B<-cbind(volume,top5_freq))#to merge the time series
library(dplyr)
B<-rename(B,volume=Freq)
write.csv(B,file="ts_list2.csv")
plot(B$Obamacare)
plot(B$Obamacare,type="l")
plot(B$time_index,B$Obamacare,type="l")
plot(B$volume)
lines(B$Obamacare)
library(xts)
plot(as.xts(B$volume,B$time_index))
as.xts(B$volume,B$time_index)
as.xts(B$volume,as.Date(B$time_index,format = "%m/%d/%y"))
plot(as.xts(B$volume,as.Date(B$time_index,format = "%m/%d/%y")))
lines(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")))
plot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")))
lines(as.xts(B$tcot,as.Date(B$time_index,format = "%m/%d/%y")))
lines(as.xts(B$SCOTUS,as.Date(B$time_index,format = "%m/%d/%y")),col=3)
lines(as.xts(B$p2,as.Date(B$time_index,format = "%m/%d/%y")),col=4)
lines(as.xts(B$healthcare,as.Date(B$time_index,format = "%m/%d/%y")),col=5)
plot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")),col=1)
lines(as.xts(B$tcot,as.Date(B$time_index,format = "%m/%d/%y")),col=2)
lines(as.xts(B$SCOTUS,as.Date(B$time_index,format = "%m/%d/%y")),col=3)
lines(as.xts(B$p2,as.Date(B$time_index,format = "%m/%d/%y")),col=4)
lines(as.xts(B$healthcare,as.Date(B$time_index,format = "%m/%d/%y")),col=5)
dev.off()
plot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")),col=1)
plot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")))
lines(as.xts(B$tcot,as.Date(B$time_index,format = "%m/%d/%y")),col=2)
lines(as.xts(B$SCOTUS,as.Date(B$time_index,format = "%m/%d/%y")),col=3)
lines(as.xts(B$p2,as.Date(B$time_index,format = "%m/%d/%y")),col=4)
lines(as.xts(B$healthcare,as.Date(B$time_index,format = "%m/%d/%y")),col=5)
png(filename = "daily freq of top5#.png")
plot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")))
lines(as.xts(B$tcot,as.Date(B$time_index,format = "%m/%d/%y")),col=2)
lines(as.xts(B$SCOTUS,as.Date(B$time_index,format = "%m/%d/%y")),col=3)
lines(as.xts(B$p2,as.Date(B$time_index,format = "%m/%d/%y")),col=4)
lines(as.xts(B$healthcare,as.Date(B$time_index,format = "%m/%d/%y")),col=5)
dev.off()
top_5
png(filename = "daily freq of top5#.png")
plot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")),main="daily freq of top5#")
lines(as.xts(B$tcot,as.Date(B$time_index,format = "%m/%d/%y")),col=2)
lines(as.xts(B$SCOTUS,as.Date(B$time_index,format = "%m/%d/%y")),col=3)
lines(as.xts(B$p2,as.Date(B$time_index,format = "%m/%d/%y")),col=4)
lines(as.xts(B$healthcare,as.Date(B$time_index,format = "%m/%d/%y")),col=5)
legend("upperright",col=1:5,top_5[-4])
dev.off()
png(filename = "daily freq of top5#.png")
plot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")),main="daily freq of top5#")
lines(as.xts(B$tcot,as.Date(B$time_index,format = "%m/%d/%y")),col=2)
lines(as.xts(B$SCOTUS,as.Date(B$time_index,format = "%m/%d/%y")),col=3)
lines(as.xts(B$p2,as.Date(B$time_index,format = "%m/%d/%y")),col=4)
lines(as.xts(B$healthcare,as.Date(B$time_index,format = "%m/%d/%y")),col=5)
legend("topright",col=1:5,top_5[-4])
dev.off()
plot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")),main="daily freq of top5#",lty=1)
lines(as.xts(B$tcot,as.Date(B$time_index,format = "%m/%d/%y")),col=2,lty=2)
lines(as.xts(B$SCOTUS,as.Date(B$time_index,format = "%m/%d/%y")),col=3,lty=3)
lines(as.xts(B$p2,as.Date(B$time_index,format = "%m/%d/%y")),col=4,lty=4)
lines(as.xts(B$healthcare,as.Date(B$time_index,format = "%m/%d/%y")),col=5,lty=5)
legend("topright",col=1:5,lty=1:5,top_5[-4])
par(lwd=2)
plot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")),main="daily freq of top5#",lty=1)
lines(as.xts(B$tcot,as.Date(B$time_index,format = "%m/%d/%y")),col=2,lty=2)
lines(as.xts(B$SCOTUS,as.Date(B$time_index,format = "%m/%d/%y")),col=3,lty=3)
lines(as.xts(B$p2,as.Date(B$time_index,format = "%m/%d/%y")),col=4,lty=4)
lines(as.xts(B$healthcare,as.Date(B$time_index,format = "%m/%d/%y")),col=5,lty=5)
png(filename = "daily freq of top5#.png")
par(lwd=2)
plot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")),main="daily freq of top5#",lty=1)
lines(as.xts(B$tcot,as.Date(B$time_index,format = "%m/%d/%y")),col=2,lty=2)
lines(as.xts(B$SCOTUS,as.Date(B$time_index,format = "%m/%d/%y")),col=3,lty=3)
lines(as.xts(B$p2,as.Date(B$time_index,format = "%m/%d/%y")),col=4,lty=4)
lines(as.xts(B$healthcare,as.Date(B$time_index,format = "%m/%d/%y")),col=5,lty=5)
legend("topright",col=1:5,lty=1:5,top_5[-4])
dev.off()
library(ggplot)
library(ggplot2)
oplot<-ggplot(B,aes(Obamacare))
oplot + geom_line()
oplot<-ggplot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")))
oplot + geom_line()
cut_point<-which(!duplicated(time_index))[-1]-1
cut_point<-c(0,cut_point,length(time_index))#the point where the date changes
get_hash<-function(x){
sapply(x$entities$hashtags,function(y) return(y$text))
}
#lapply(obamacare[1:5], FUN = get_hash)
top5<-function(x){
freq<-table(unlist(x))
sorted<-names(freq)[order(freq,decreasing = T)]
if(length(sorted>5)) return(sorted[1:5])
else return(sorted[1])
}
tophash<-t(sapply(hash_tags,FUN = top5))
colnames(tophash)<-c("top5_1","top5_2","top5_3","top5_4","top5_5")
tophash<-as.data.frame(tophash,stringsAsFactors = F)
A<-cbind(volume,tophash)#to merge the time series
library(dplyr)
A<-rename(A,volume=Freq)
write.csv(A,file="ts_list.csv")
head(B)
ggplot(B, aes(time_index, Obamacare)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("") + ylab("hashtags")
ggplot(B, aes(time_index, Obamacare)) + geom_line() +
scale_x_date(format = "%m/%d/%y") + xlab("") + ylab("hashtags")
ggplot(B, aes(time_index, Obamacare)) + geom_line()
ggplot(B, aes(time_index, Obamacare)) + geom_line() +
scale_x_date(format = "%m/%d/%y") + xlab("") + ylab("hashtags")
scale_x_date(format = "%m/%d/%y")
b<-as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y"))
ggplot(b, aes(time_index, Obamacare)) + geom_line() +
scale_x_date(format = "%m/%d/%y") + xlab("") + ylab("hashtags")
ggplot(b, aes(time_index, Obamacare)) + geom_line()
head(b)
b<-B[c(1,3)]
head(b)
ggplot(b, aes(time_index, Obamacare)) + geom_line() +
scale_x_date(format = "%m/%d/%y") + xlab("") + ylab("hashtags")
ggplot(b, aes(time_index, Obamacare)) + geom_line()
ggplot(B, aes(x = B$time_index, y = B$Obamacare))
ggplot(B, aes(x = B$time_index, y = B$Obamacare))+
geom_line()
ggplot(B, aes(x = B$time_index, y = B$Obamacare))+
geom_line(position=pd)
class(B)
class(B$Obamacare'')
class(B$Obamacare)
set.seed(1)
tdat <- data.frame(Site = rep(paste0("Site", c("A","B")),
each = 100),
Date = rep(seq(Sys.Date(), by = "1 day", length = 100), 2),
Fitted = c(cumsum(rnorm(100)), cumsum(rnorm(100))),
Signif = rep(NA, 200))
tdat <- transform(tdat, Upper = Fitted + 1.5, Lower = Fitted - 1.5)
## select 1 region per Site as signif
take <- sample(10:70, 2)
take[2] <- take[2] + 100
tdat$Signif[take[1]:(take[1]+25)] <- tdat$Fitted[take[1]:(take[1]+25)]
tdat$Signif[take[2]:(take[2]+25)] <- tdat$Fitted[take[2]:(take[2]+25)]
head(tdat)
class(tdat$Date)
b<-B[c(-2)]
head(b)
b$time_index<-as.Date(b$time_index,format = "%m/%d/%y")
ggplot(b, aes(time_index, Obamacare)) + geom_line()
ggplot(b, aes(time_index, Obamacare)) + geom_line() +
geom_line(mapping = aes(y = tcot), lty = "dashed") +
geom_line(mapping = aes(y = SCOTUS), lty = "dashed") +
geom_line(mapping = aes(y = p2), lwd = 1.3, colour = "red") +
geom_line(mapping = aes(y = healthcare), lty = "dashed")
ggplot(b, aes(time_index, Obamacare)) + geom_line(lty = 1) +
geom_line(mapping = aes(y = tcot), lty = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = "red") +
geom_line(mapping = aes(y = healthcare), lty = 5)
ggplot(b, aes(time_index, Obamacare)) + geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4) +
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)
ggplot(b, aes(time_index, Obamacare)) + geom_line(lty = 1,colour = 1) +
ggplot(b, aes(time_index, Obamacare)) + geom_line(lty = 1,colour = 1)
ggplot(b, aes(time_index, Obamacare)) + geom_line(lty = 1,colour = 1)
+geom_line(mapping = aes(y = tcot), lty = 2,colour = 2)
ggplot(b, aes(time_index, Obamacare)) + geom_line(lty = 1,colour = 1)
ggplot(b, aes(time_index, Obamacare)) + geom_line(lty = 1,colour = 1) +
+geom_line(mapping = aes(y = tcot), lty = 2,colour = 2)
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2)
ggplot(b, aes(time_index, Obamacare)) + geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2)
ggplot(b, aes(time_index, Obamacare)) + geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3)
ggplot(b, aes(time_index, Obamacare)) + lwd(1.2)+geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4)+
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)
ggplot(b, aes(time_index, Obamacare)) +aes(lwd=1.2)+geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4)+
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)
ggplot(b, aes(time_index, Obamacare)) +aes(lwd=1)+geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4)+
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)
ggplot(b, aes(time_index, Obamacare)) +aes(lwd=.5)+geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4)+
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)
ggplot(b, aes(time_index, Obamacare)) +aes(lwd=.1)+geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4)+
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)
ggplot(b, aes(time_index, Obamacare)) +geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4)+
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)
ggplot(b, aes(time_index, Obamacare)) +geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4)+
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)+
labs( title = "daily freq of top5#")
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4)+
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)+
labs( title = "daily freq of top5#")+xlab("period")+ylab("hashtags")
ggplot(b, aes(time_index, Obamacare)) +geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4)+
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)
ggplot(b, aes(time_index, Obamacare)) +xlab("period")+ylab("hashtags")+geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4)+
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)
labs( title = "daily freq of top5#")
ggplot(b, aes(time_index, Obamacare)) +xlab("period")+ylab("hashtags")+geom_line(lty = 1,colour = 1) +
geom_line(mapping = aes(y = tcot), lty = 2,colour = 2) +
geom_line(mapping = aes(y = SCOTUS), lty =3,colour = 3) +
geom_line(mapping = aes(y = p2), lty =4,lwd = 1.3, colour = 4)+
geom_line(mapping = aes(y = healthcare), lty = 5,colour = 5)+
labs( title = "daily freq of top5#")
plot(as.xts(B$Obamacare,as.Date(B$time_index,format = "%m/%d/%y")),main="daily freq of top5#",lty=1)
lines(as.xts(B$tcot,as.Date(B$time_index,format = "%m/%d/%y")),col=2,lty=2)
lines(as.xts(B$SCOTUS,as.Date(B$time_index,format = "%m/%d/%y")),col=3,lty=3)
lines(as.xts(B$p2,as.Date(B$time_index,format = "%m/%d/%y")),col=4,lty=4)
lines(as.xts(B$healthcare,as.Date(B$time_index,format = "%m/%d/%y")),col=5,lty=5)
legend("topright",col=1:5,lty=1:5,top_5[-4])
freq<-table(unlist(hash_tags))
top_5<-names(freq)[order(freq,decreasing = T)][1:6] # the top 5 # over the whole period,two of them are the same
top_5
freq
sort(freq)
tail(sort(freq))
tail(sort(freq),10)
