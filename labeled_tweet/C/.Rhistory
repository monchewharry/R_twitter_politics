par(mar=c(0,0,0,0))
plot(net, edge.arrow.size=.2, edge.color="orange"
,vertex.label = ifelse(V(net)$weight>1000,V(net)$name,NA)
,vertex.color="red"
,vertex.size=ifelse(V(net)$weight>1000,1.2,0.2)
,vertex.frame.color=rgb(.25, .5, .3,alpha=ifelse(V(net)$weight>1000,1,0.2))
,vertex.label=NA, vertex.label.color="black")
# add title
title("\nconserv tweeters:  Who retweets whom",
cex.main=1, col.main="black",family="mono")
dev.off()
### delete the meaningless vertex
?simplify
edge_list
head(edge_list)
head(vertices_list)
setdiff(vertices_list$id,c(edge_list$post,edge_list$retweet_from))
vertices_list$id %in% c(edge_list$post,edge_list$retweet_from)
v<-vertices_list[vertices_list$id %in% c(edge_list$post,edge_list$retweet_from),]
net<-graph.data.frame(d=edge_list,v=v ,directed=T)
fruch = layout.fruchterman.reingold(net)
circle=layout.circle(net)
png(filename = "conserv retweet_graph2.png",width=1400,height=850)
par(mar=c(0,0,0,0))
plot(net, edge.arrow.size=.2, edge.color="orange"
,vertex.label = ifelse(V(net)$weight>1000,V(net)$name,NA)
,vertex.color="red"
,vertex.size=ifelse(V(net)$weight>1000,1.2,0.2)
,vertex.label=NA, vertex.label.color="black")
dev.off()
png(filename = "conserv retweet_graph2.png",width=1400,height=850)
par(mar=c(0,0,0,0))
plot(net, edge.arrow.size=.2, edge.color="orange"
,vertex.label = ifelse(V(net)$weight>1000,V(net)$name,NA)
,vertex.color="red"
,vertex.size=ifelse(V(net)$weight>1000,1.2,0.2)
,vertex.frame.color=rgb(.25, .5, .3,alpha=ifelse(V(net)$weight>1000,1,0.2))
,vertex.label=NA, vertex.label.color="black")
dev.off()
B<-read.csv("convserv top50# freq.csv",header = T)
## ggplot2
b<-B[c(-1,-3)]
b$time_index<-as.Date(b$time_index,format = "%m/%d/%y")
library(reshape2)
b1<-melt(b,id.vars = c("time_index"))
b1<-cbind(b1,period=c(rep(1,18),rep(2,19),rep(3,18)))
png("image/daily freq of conserv top50#.png",width=1500,height=850)
ggplot(b1) + geom_line(aes(x=time_index, y=value, colour=variable)) +
scale_colour_manual(values=seq(50))+
facet_wrap( ~ period,scale="free_x")+
labs( title = "daily freq of conserv top50#")
dev.off()
library(ggplot2)
## ggplot2
b<-B[c(-1,-3)]
B<-read.csv("convserv top50# freq.csv",header = T)
library(ggplot2)
## ggplot2
b<-B[c(-1,-3)]
b$time_index<-as.Date(b$time_index,format = "%m/%d/%y")
library(reshape2)
b1<-melt(b,id.vars = c("time_index"))
b1<-cbind(b1,period=c(rep(1,18),rep(2,19),rep(3,18)))
png("image/daily freq of conserv top50#.png",width=1500,height=850)
ggplot(b1) + geom_line(aes(x=time_index, y=value, colour=variable)) +
scale_colour_manual(values=seq(50))+
facet_wrap( ~ period,scale="free_x")+
labs( title = "daily freq of conserv top50#")
dev.off()
class(b1)
head(b1)
b2<-b1[-1]
head(b2,50)
library(dplyr)
head(b1)
b2<-b1[-1]
head(b2)
value<-group_by(b2,variable,period)
head(value)
value2<-group_by(b2,variable,period)
rm(value)
value2<-group_by(b2,variable,period)
summarise(value2,period_sum=sum(value))
heat_mat<-summarise(value2,period_sum=sum(value))
class(heat_mat)
matrix(heat_mat$period_sum, ncol = 3)
matrix(heat_mat$period_sum, ncol = 3,byrow = T)
heat_mat<-matrix(heat_mat$period_sum, ncol = 3,byrow = T)
heat_mat<-summarise(value2,period_sum=sum(value))
heat_m<-matrix(heat_mat$period_sum, ncol = 3,byrow = T)
colnames(heat_m)<-c("1","2","3")
heat_mat$variable
rownames(heat_m)<-levels(heat_mat$variable)
heat_mat[1,]
heat_m[1,]
heat_m[1:4,]
image(heat_m)
heat(heat_m)
heat_m<-as.data.frame(t(heat_m))
head(heat_m)
image(heat_m)
?image
heat_m<-matrix(heat_mat$period_sum, ncol = 3,byrow = T)
colnames(heat_m)<-c("1","2","3")
rownames(heat_m)<-levels(heat_mat$variable)
heat_m[1:4,]
image(x = colnames(heat_m),heat_m)
class(heat_m)
image(x = rownames(heat_m),heat_m)
heat_m
years <- seq(1975,1989,2)
db <- data.frame(Dallas=c( 25, 28, 27, 29, 31, 33, 35, 37),
Houston=c( 33, 38, 43, 48, 53, 58, 63, 68),
Lubbock=c( 28, 29, 31, 33, 35, 37, 39, 41),
Austin= c(22, 24, 26, 28, 30, 32, 34, 36),
San_Antonio= c(31, 32, 33, 34, 35, 36, 37, 38)
)
db <- as.matrix(db)
#plot
layout(matrix(c(1,2), nrow=1, ncol=2), widths=c(4,1), heights=c(4))
layout.show(2)
par(mar=c(5,5,1,1))
image(x=years, z=db, yaxt="n")
axis(2, at=seq(0,1,,dim(db)[2]), labels=colnames(db))
#image.scale from http://menugget.blogspot.de/2011/08/adding-scale-to-image-plot.html
par(mar=c(5,0,1,5))
image.scale(db, horiz=FALSE, yaxt="n", xaxt="n", xlab="", ylab="")
axis(4)
mtext("temp", side=4, line=2)
box()
layout(matrix(c(1,2), nrow=1, ncol=2), widths=c(4,1), heights=c(4))
layout.show(2)
par(mar=c(5,5,1,1))
image(x=years, z=db, yaxt="n")
axis(2, at=seq(0,1,,dim(db)[2]), labels=colnames(db))
#image.scale from http://menugget.blogspot.de/2011/08/adding-scale-to-image-plot.html
par(mar=c(5,0,1,5))
image.scale(db, horiz=FALSE, yaxt="n", xaxt="n", xlab="", ylab="")
axis(4)
mtext("temp", side=4, line=2)
box()
?image
require(grDevices) # for colours
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
image(z, axes = FALSE, main = "Math can be beautiful ...",
xlab = expression(cos(r^2) * e^{-r/6}))
contour(z, add = TRUE, drawlabels = FALSE)
image(t(volcano)[ncol(volcano):1,])
# A prettier display of the volcano
x <- 10*(1:nrow(volcano))
y <- 10*(1:ncol(volcano))
image(x, y, volcano, col = terrain.colors(100), axes = FALSE)
contour(x, y, volcano, levels = seq(90, 200, by = 5),
add = TRUE, col = "peru")
require(grDevices) # for colours
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
require(grDevices) # for colours
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
image(x = rownames(heat_m),z=heat_m)
image(z=heat_m)
image(z=heat_m)
require(grDevices) # for colours
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
z <- cos(r^2)*exp(-r/6)
z
heat_m
scale(heat_m)
heat_m/max(heat_m)
heat_m[1:4,]
heat_m<-heat_m/max(heat_m)
image(z=heat_m)
image(z=heat_m,col  = gray((0:32)/32))
image(z=heat_m,col  = gray((0:100)/100))
image(z=heat_m,col  = gray((0:1000)/1000))
image(x=rownames(heat_m),z=heat_m,col  = gray((0:1000)/1000))
?image
require(grDevices) # for colours
x <- y <- seq(-4*pi, 4*pi, len = 27)
r <- sqrt(outer(x^2, y^2, "+"))
image(z = z <- cos(r^2)*exp(-r/6), col  = gray((0:32)/32))
image(z, axes = FALSE, main = "Math can be beautiful ...",
xlab = expression(cos(r^2) * e^{-r/6}))
image(t(volcano)[ncol(volcano):1,])
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv")
head(nba)
nba$Name <- with(nba, reorder(Name, PTS))
library(ggplot2)
library(ggplot2)
nba.m <- melt(nba)
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
dplyr
library(dplyr)
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
library(plyr)
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
library(ggplot2)
nba.m <- melt(nba)
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
?rescale
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
library(scales)
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
library(scales)
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
(p <- ggplot(nba.m, aes(variable, Name)) + geom_tile(aes(fill = rescale),
+     colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue"))
(p <- ggplot(nba.m, aes(variable, Name)) +
geom_tile(aes(fill = rescale),colour = "white") +
scale_fill_gradient(low = "white",high = "steelblue"))
nba.m
head(nba.m)
head()
head(nba)
class(nba)
heat_m<-as.data.frame(heat_m)
head(heat_m)
heat_m$Name<-rownames(heat_m)
head(heat_m)
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv")
nba$Name <- with(nba, reorder(Name, PTS))
head(nba)
nba.m <- melt(nba)
nba.m <- melt(heat_m)
library(scales)
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
(p <- ggplot(nba.m, aes(variable, Name)) +
geom_tile(aes(fill = rescale),colour = "white") +
scale_fill_gradient(low = "white",high = "steelblue"))
png("heat.png")
library(ggplot2)
nba.m <- melt(nba)
library(scales)
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
(p <- ggplot(nba.m, aes(variable, Name)) +
geom_tile(aes(fill = rescale),colour = "white") +
scale_fill_gradient(low = "white",high = "steelblue"))
dev.off()
head(nba.m)
nba.m <- melt(heat_m)
###########
png("heat.png")
library(scales)
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
(p <- ggplot(nba.m, aes(variable, Name)) +
geom_tile(aes(fill = rescale),colour = "white") +
scale_fill_gradient(low = "white",high = "steelblue"))
dev.off()
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
(p <- ggplot(nba.m, aes(variable, Name)) +
geom_tile(aes(fill = rescale),colour = "black") +
scale_fill_gradient(low = "white",high = "steelblue"))
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
(p <- ggplot(nba.m, aes(variable, Name)) +
geom_tile(aes(fill = rescale),colour = "black") +
scale_fill_gradient(low = "white",high = "red"))
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
(p <- ggplot(nba.m, aes(variable, Name)) +
geom_tile(aes(fill = rescale),colour = "black") +
scale_fill_gradient(low = "blue",high = "red"))
png("heat_conserv.png")
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
(p <- ggplot(nba.m, aes(variable, Name)) +
geom_tile(aes(fill = rescale),colour = "black") +
scale_fill_gradient(low = "white",high = "red"))
dev.off()
load("conserv_hashtags.RData")
length(conserv_hashtags)
length(conserv_hashtags)
conserv_hashtags[[1]]
lower<-function(x){
vec<-unlist(x)
vec_lower<-tolower(iconv(vec, "latin1", "UTF-8", sub=""))
}
conserv_hash<-lapply(conserv_hashtags,lower)
conserv_hash[[1]]
conserv_hashtags[[1]]
conserv_hash[[1]]
length(conserv_hash)
conserv_lowerhash<-lapply(conserv_hashtags,lower)
save(conserv_lowerhash,file = "conserv_lowerhash.RData")
getwd()
load("conserv_lowerhash.RData")
freq<-table(unlist(conserv_lowerhash))
top_50<-names(freq)[order(freq,decreasing = T)][1:50] # the top 5 # over the whole period,two of them are the same
dailyfreq<-function(x){
freq50<-NULL
for(tag in top_50){
freq50<-c(freq50,sum(unlist(x)==tag))
}
freq50
}
top50_freq<-t(sapply(conserv_lowerhash,FUN = dailyfreq))
colnames(top50_freq)<-top_50
top50_freq<-as.data.frame(top50_freq,stringsAsFactors = F)
head(top50_freq)
top50_freq<-select((mutate(top50_freq,Obamacare=Obamacare+ObamaCare+obamacare+OBAMACARE)),-c(ObamaCare,obamacare,OBAMACARE))# merge the same hashtags
head(top50_freq)
load("volume_conserv.RData")
(B<-cbind(volume_conserv,top50_freq))#to load volume first!
write.csv(B,file="convserv top50# freq.csv")
B<-read.csv("convserv top50# freq.csv",header = T)
head(B)
B<-read.csv("convserv top50# freq.csv",header = T)
library(ggplot2)
library(plyr)
library(dplyr)
## ggplot2
b<-B[c(-1,-3)]
b$time_index<-as.Date(b$time_index,format = "%m/%d/%y")
library(reshape2)
b1<-melt(b,id.vars = c("time_index"))
b1<-cbind(b1,period=c(rep(1,18),rep(2,19),rep(3,18)))
b2<-b1[-1]
head(b2)
value2<-group_by(b2,variable,period)
heat_mat<-summarise(value2,period_sum=sum(value))
heat_m<-matrix(heat_mat$period_sum, ncol = 3,byrow = T)
colnames(heat_m)<-c("1","2","3")
rownames(heat_m)<-levels(heat_mat$variable)
heat_m<-as.data.frame(heat_m)
heat_m$Name<-rownames(heat_m)
head(heat_m)
nba.m <- melt(heat_m)
head(heat_m)
dim(heat_m)
head(B)
head(b)
b1<-cbind(b1,period=c(rep(1,18),rep(2,19),rep(3,18)))
b2<-b1[-1]
head(b2)
b<-B[c(-1,-3)]
b$time_index<-as.Date(b$time_index,format = "%m/%d/%y")
library(reshape2)
b1<-melt(b,id.vars = c("time_index"))
b1<-cbind(b1,period=c(rep(1,18),rep(2,19),rep(3,18)))
b2<-b1[-1]
head(b2)
value2<-group_by(b2,variable,period)
heat_mat<-summarise(value2,period_sum=sum(value))
heat_mat
head(b2,100)
value2<-group_by(b2,variable,period)
value2
heat_mat<-summarise(value2,period_sum=sum(value))
heat_mat
value2
value2$variable
heat_mat<-summarise(value2,period_sum=sum(value))
dim(heat_mat)
B<-read.csv("convserv top50# freq.csv",header = T)
library(ggplot2)
library(plyr)
library(dplyr)
## ggplot2
b<-B[c(-1,-3)]
b$time_index<-as.Date(b$time_index,format = "%m/%d/%y")
library(reshape2)
b1<-melt(b,id.vars = c("time_index"))
b1<-cbind(b1,period=c(rep(1,18),rep(2,19),rep(3,18)))
b2<-b1[-1]
head(b2)
value2<-group_by(b2,variable,period)
heat_mat<-summarise(value2,period_sum=sum(value))
dim(heat_mat)
heat_mat
heat_m<-matrix(heat_mat$period_sum, ncol = 3,byrow = T)
colnames(heat_m)<-c("1","2","3")
rownames(heat_m)<-levels(heat_mat$variable)
heat_m<-as.data.frame(heat_m)
heat_m$Name<-rownames(heat_m)
head(heat_m)
nba.m <- melt(heat_m)
library(ggplot2)
library(scales)
png("heat_conserv.png")
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
(p <- ggplot(nba.m, aes(variable, Name)) +
geom_tile(aes(fill = rescale),colour = "black") +
scale_fill_gradient(low = "white",high = "red"))
dev.off()
load("liberal_hashtags.RData")
liberal_hashtags[[1]]
load("../L/liberal_hashtags.RData")
liberal_hashtags[[1]]
lower<-function(x){
vec<-unlist(x)
vec_lower<-tolower(iconv(vec, "latin1", "UTF-8", sub=""))
}
liberal_lowerhash<-lapply(liberal_hashtags,lower)
save(liberal_lowerhash,file = "../L/liberal_lowerhash.RData")
load("liberal_lowerhash.RData")
load("../L/liberal_lowerhash.RData")
load("../L/liberal_lowerhash.RData")
setwd("../L")
load("liberal_lowerhash.RData")
B<-read.csv("liberal top50# freq.csv",header = T)
library(ggplot2)
library(plyr)
library(dplyr)
## ggplot2
b<-B[c(-1,-3)]
b$time_index<-as.Date(b$time_index,format = "%m/%d/%y")
library(reshape2)
b1<-melt(b,id.vars = c("time_index"))
b1<-cbind(b1,period=c(rep(1,18),rep(2,19),rep(3,18)))
b2<-b1[-1]
head(b2)
value2<-group_by(b2,variable,period)
heat_mat<-summarise(value2,period_sum=sum(value))
dim(heat_mat)
dim(B)
load("liberal_lowerhash.RData")
load("volume_liberal.RData")
freq<-table(unlist(liberal_lowerhash))
top_50<-names(freq)[order(freq,decreasing = T)][1:50] # the top 5 # over the whole period,two of them are the same
dailyfreq<-function(x){
freq50<-NULL
for(tag in top_50){
freq50<-c(freq50,sum(unlist(x)==tag))
}
freq50
}
top50_freq<-t(sapply(liberal_lowerhash,FUN = dailyfreq))
colnames(top50_freq)<-top_50
top50_freq<-as.data.frame(top50_freq,stringsAsFactors = F)
head(top50_freq)
dim(top50_freq)
(B<-cbind(volume_liberal,top50_freq))#to load volume first!
write.csv(B,file="liberal top50# freq.csv")
load("liberal_lowerhash.RData")
B<-read.csv("liberal top50# freq.csv",header = T)
library(ggplot2)
library(plyr)
library(dplyr)
## ggplot2
b<-B[c(-1,-3)]
b$time_index<-as.Date(b$time_index,format = "%m/%d/%y")
library(reshape2)
b1<-melt(b,id.vars = c("time_index"))
b1<-cbind(b1,period=c(rep(1,18),rep(2,19),rep(3,18)))
b2<-b1[-1]
head(b2)
value2<-group_by(b2,variable,period)
heat_mat<-summarise(value2,period_sum=sum(value))
dim(heat_mat)
heat_m<-matrix(heat_mat$period_sum, ncol = 3,byrow = T)
colnames(heat_m)<-c("1","2","3")
rownames(heat_m)<-levels(heat_mat$variable)
heat_m<-as.data.frame(heat_m)
heat_m$Name<-rownames(heat_m)
head(heat_m)
nba.m <- melt(heat_m)
###########
library(ggplot2)
library(scales)
png("heat_liberal.png")
nba.m <- ddply(nba.m, .(variable), transform,
rescale = rescale(value))
(p <- ggplot(nba.m, aes(variable, Name)) +
geom_tile(aes(fill = rescale),colour = "black") +
scale_fill_gradient(low = "white",high = "red"))
dev.off()
setwd("../C/")
B<-read.csv("convserv top50# freq.csv",header = T)
library(ggplot2)
library(plyr)
library(dplyr)
## ggplot2
b<-B[c(-1,-3)]
b$time_index<-as.Date(b$time_index,format = "%m/%d/%y")
library(reshape2)
b1<-melt(b,id.vars = c("time_index"))
b1<-cbind(b1,period=c(rep(1,18),rep(2,19),rep(3,18)))
b2<-b1[-1]
head(b2)
value2<-group_by(b2,variable,period)
heat_mat<-summarise(value2,period_sum=sum(value))
dim(heat_mat)
heat_m<-matrix(heat_mat$period_sum, ncol = 3,byrow = T)
colnames(heat_m)<-c("1","2","3")
rownames(heat_m)<-levels(heat_mat$variable)
heat_m<-as.data.frame(heat_m)
heat_m$Name<-rownames(heat_m)
head(heat_m)
nba.m <- melt(heat_m)
###########
